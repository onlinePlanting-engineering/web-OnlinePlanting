"""
Django settings for planting project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import dj_database_url
from datetime import timedelta

DEVELOP_ENV=0
STAGING_ENV=1
PRODUCT_ENV=2


DEPLOY_ENV=DEVELOP_ENV
#DEPLOY_ENV=STAGING_ENV
# DEPLOY_ENV=PRODUCT_ENV

BIND_ADDR = '0.0.0.0:8000'

if DEPLOY_ENV==PRODUCT_ENV:
    DEBUG=False
    SENTRY_DEBUG=False
    MEDIA_ROOT = '/var/www/static/planting/'
    STATICFILES_DIRS = ('/var/www/static/planting/')
    # dynamically resize images
    STATIC_URL = 'http://www.onlineplanting.com/s/'
    # absolute static url
    ABS_STATIC_URL = 'http://s.onlineplanting.com/'
    SERVER_ADDR = 'www.onlineplanting.com'
    # use secure cookie
    SESSION_COOKIE_SECURE=True
elif DEPLOY_ENV==STAGING_ENV:
    DEBUG=True
    SENTRY_DEBUG=True
    PS_DB_HOST='127.0.0.1'
    PS_DB_PORT=5432
    MEDIA_ROOT = '/var/www/static/piclink/'
    STATIC_URL = 'http://127.0.0.1:8000/s/'
    ABS_STATIC_URL = 'http://s.onlineplanting.com'
    STATICFILES_DIRS = ('/var/www/static/planting/')
    SERVER_ADDR = '127.0.0.1:8000'
else:
    DEBUG = True
    SENTRY_DEBUG = True
    PS_DB_HOST = '127.0.0.1'
    PS_DB_PORT = 5432
    MEDIA_ROOT = '/var/www/static/piclink/'
    STATIC_URL = 'http://127.0.0.1:8000/s/'
    ABS_STATIC_URL = 'http://s.onlineplanting.com'
    STATICFILES_DIRS = ('/var/www/static/planting/')
    SERVER_ADDR = '127.0.0.1:8000'


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(__file__))
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'j8gwd0ravtb3tjs$wv3m7#4re(*ssqx6yc*t+u6*(5la-gylm('

# SECURITY WARNING: don't run with debug turned on in production!

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_expiring_authtoken',
    'tinymce_4',
    'grappelli',
    'filebrowser',
    'corsheaders',
    # 'rest_framework_docs',
    # 'drf_autodocs',
    'rest_framework_swagger',
    'accounts',
    'farm',
    'lands',
    'seeds',
    'comments',
    'images',
    'orders',
    'cameras',
    'wp'

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',

]

ROOT_URLCONF = 'planting.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'planting.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'planting2',
        'USER': 'root',
        'PASSWORD': 'root',
        'HOST': 'localhost',   # Or an IP Address that your DB is hosted on
        'PORT': '3306',
        'OPTIONS': {
            # 'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",  # this will bring err "1366, "Incorrect string value:
            'charset': 'utf8mb4',
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Update database configuration with $DATABASE_URL
db_from_env = dj_database_url.config(conn_max_age=500)
DATABASES['default'].update(db_from_env)

# Honor the 'X-Forwarded-Proto' header for request.is_secure()
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
STATIC_ROOT = os.path.join(PROJECT_ROOT, 'staticfiles')
STATIC_URL = '/static/'
MEDIA_ROOT = os.path.join(PROJECT_ROOT, 'static/images/upload')
MEDIA_URL = '/media/'
# Extra places for collectstatic to find static files.
STATICFILES_DIRS = (
    os.path.join(PROJECT_ROOT, 'static'),
)

# Simplified static file serving.
# https://warehouse.python.org/project/whitenoise/
STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'


REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES':(
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        # 'rest_framework.authentication.TokenAuthentication',
        'rest_framework_expiring_authtoken.authentication.ExpiringTokenAuthentication',
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'EXCEPTION_HANDLER': 'planting.utils.custom_exception_handler',
    'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',)
}
EXPIRING_TOKEN_LIFESPAN = timedelta(days=30)

REST_SESSION_LOGIN = False
APPEND_SLASH = True
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True


AUTHENTICATION_BACKENDS = ( 'wp.backend.WPBackend', )
AUTH_USER_MODEL = 'wp.WpUser'

PASSWORD_HASHERS = (
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.SHA1PasswordHasher',
    'django.contrib.auth.hashers.MD5PasswordHasher',
    'django.contrib.auth.hashers.CryptPasswordHasher',
    'hashers_passlib.phpass',
)